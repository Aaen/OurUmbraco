@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using uForum;

@{
    var ts = new uForum.Services.TopicService(ApplicationContext.DatabaseContext);
}

<div class="col-md-6">
    @Column(ts.GetLatestTopics(3, 1))
</div>
<div class="col-md-6">
    @Column(ts.GetLatestTopics(3, 2))
</div>

@helper Column(IEnumerable<uForum.Models.ReadOnlyTopic> topics)
{
    <ul>
        @foreach (var topic in topics.ToArray())
        {
            var cat = Umbraco.TypedContent(topic.ParentId);
            var mem = Members.GetById(topic.LatestReplyAuthor) ?? Members.GetById(topic.MemberId);

            <a href="@topic.GetUrl()" class="forum-thread">
                <div class="row flex-center">
                    <div class="col-xs-2">@avatar(mem, 79)</div>
                    <div class="col-xs-10">
                        <div class="forum-thread-text">
                            <h3>@topic.Title</h3>
                            <p>@{
                                    if (topic.Replies != 0 && !string.IsNullOrEmpty(topic.LastReplyAuthorName))
                                    {
                                        <text>last edited by @topic.LastReplyAuthorName</text>
                                    }
                                    else
                                    {
                                        <text>created by @topic.AuthorName</text>
                                    }
                                }  @topic.Updated.ConvertToRelativeTime()
                            </p>
                        </div>

                        <div class="category frontend"><span class="cat">@cat.Name</span></div>
                    </div>

                </div>
            </a>
        }
    </ul>
}

@helper avatar(IPublishedContent member, int avatarSize)
{
    if (member.HasValue("avatar"))
    {
        @localAvatar(member.GetPropertyValue("avatar").ToString(), avatarSize, member.Name);
    }
    else
    {
        @gravatar(member.GetPropertyValue("Email").ToString(), avatarSize, member.Name);
    }
}

@helper gravatar(string email, int size, string memberName)
{
    var emailId = email.ToLower();
    var hash = FormsAuthentication.HashPasswordForStoringInConfigFile(emailId, "MD5").ToLower();

    <img src="//www.gravatar.com/avatar/@hash?s=@size&d=mm&r=g&d=retro" alt="@memberName"/>
}

@helper localAvatar(string imgPath, int size, string memberName)
{
    <img src="@imgPath?width=@size&height=@size&mode=crop" alt="@memberName" />
}