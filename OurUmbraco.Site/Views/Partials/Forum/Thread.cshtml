@model ReadOnlyTopic
@using System.Web.Mvc.Html
@using OurUmbraco.Forum.Models
@using Umbraco.Core.Logging

<!-- COPY LINK -->
<div id="overlay" class="overlay"></div>

<div id="copy-link-wrapper" class="copy-link-wrapper">
    <i class="icon-Link"></i>
    <textarea class="getLink" readonly type="text"></textarea>
    <p>Press Ctrl / CMD + C to copy this to your clipboard.</p>
</div>

<div id="thankyou">
    Copied to clipboard
</div>
<!-- COPY LINK END -->
<!-- DELETE THREAD/COMMENT START -->
@if (Model.MemberData != null)
{
    <div id="confirm-wrapper" class="confirm-wrapper">
        <h4>Are you sure?</h4>
        <p>This <span class="type-of"></span> will be gone forever and ever</p>
        <br />
        <button type="button" class="button green tiny">Yes</button>
        <button type="button" class="button red tiny">No</button>
    </div>
}

<!-- DELETE THREAD END -->
<!-- FLAG SPAM START -->
<div id="confirm-wrapper-flag" class="confirm-wrapper-flag">
    <h4>Flag this post as spam?</h4>
    <p>This post will be reported to the moderators as potential spam to be looked at</p>
    <br />
    <button type="button" class="button green tiny">Yes</button>
    <button type="button" class="button red tiny">No</button>
</div>
<!-- FLAG SPAM END -->

@if (Model.ForumNewTopicsAllowed == false)
{
    <div class="alertbar__yellow" style="margin-bottom: 10px;">
        @Html.Raw(Model.MainNotification)
    </div>
}

<ul class="comments">
    @{
        try
        {
            @Html.Partial("forum/question", Model)
        }
        catch (Exception ex)
        {
            LogHelper.Error<string>(string.Format("~/Views/MacroPartials/Forum/Thread.cshtml - error rendering topic with id {0}", Model.Id), ex);
        }
    }

    @foreach (var comment in Model.Comments.Where(x => x.ParentCommentId == 0))
    {
        Html.RenderPartial("forum/comment", comment);

        if (comment.HasChildren)
        {
            foreach (var child in Model.Comments.Where(c => c.ParentCommentId == comment.Id))
            {
                Html.RenderPartial("forum/comment", child);
            }
        }
    }
</ul>

@if (Model.MemberData != null)
{
    if (Model.ForumNewTopicsAllowed)
    {
        <div class="replybutton">
            <a href="#" class="button green large reply forum-reply" data-author="@Model.AuthorName" data-topic="@Model.Id" data-controller="comment"><i class="icon-Reply-arrow"></i>&nbsp;Reply to topic</a>
        </div>

        <div class="utilities">
            <div class="utility-actions thread-bottom">
                @if (Model.MemberData.IsAdmin)
                {
                    <a href="#" class="delete-thread button" data-id="@Model.Id">
                        <i class="icon-Delete-key"></i><span>Delete thread</span>
                    </a>
                }

                <a href="#" class="follow button @(Model.Subscribed ? "following" : "transparent")" data-id="@Model.Id" data-controller="topic">
                    <i class="icon-Bookmark"></i><span>@(Model.Subscribed ? "Following" : "Follow")</span>
                </a>

                @if (Model.Answer > 0)
                {
                    <a href="#comment-@Model.Answer.ToString()" class="go-to-solution button transparent">
                        <i class="icon-Check"></i><span>Go to solution</span>
                    </a>
                }
            </div>
        </div>
    }
    else
    {
        <div class="alertbar__yellow">
            @Html.Raw(Model.MainNotification)
        </div>
    }
}
else
{
    <div class="replybutton notloggedin">
        Please <a href="/member/login?redirectUrl=@(Server.UrlEncode(Request.Url.AbsoluteUri))">Sign in</a> or <a href="/member/signup">register</a> to post replies
    </div>
}

<script src="http://ajax.aspnetcdn.com/ajax/signalr/jquery.signalr-2.2.2.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pnotify/3.2.0/pnotify.js"></script>
<link  href="https://cdnjs.cloudflare.com/ajax/libs/pnotify/3.2.0/pnotify.css" rel="stylesheet" type="text/css" />
<link  href="https://cdnjs.cloudflare.com/ajax/libs/pnotify/3.2.0/pnotify.brighttheme.css" rel="stylesheet" type="text/css" />

<script src="~/signalr/hubs"></script>
<script>
    $(function() {
        var forum = $.connection.forumPostHub;

        forum.client.someoneIsTyping = function(id) {
            if (id !== @Model.Id) {
                return;
            }
            $('#writing-notification').html('Someone is Typing').fadeIn(100, function() {
                $(this).delay(1000).fadeOut();
            });;
        };

        forum.client.returnLatestComment = function(data) {
            if (data.topicId !== @Model.Id) {
                return;
            }
            var avatarUrl = '/umbraco/api/Avatar/GetMemberAvatar/?memberId=' + data.authorId;
            $.ajax({
                url: avatarUrl,
                type: "GET"
            }).done(function(avatarData) {
                data.avatar = avatarData;

                //new comment we'll use mustache to insert it into the dom
                data.lower = function() {
                    return function(text, render) {
                        return render(text).toLowerCase();
                    }
                };

                data.canHaveChildren = data.parent == 0;
                var template = $('#comment-template').html();
                var rendered = Mustache.render(template, data);

                if (data.parent == 0) {
                    $(".comments").append(rendered);

                    $("div.replybutton").insertAfter($("#comment-" + data.id));
                } else {
                    var allComments = $("li[data-parent='" + data.parent + "']");
                    if (allComments.length > 0) {
                        var lastComment;
                        for (var i = 0; i < allComments.length; i++) {
                            lastComment = allComments[i];
                        }
                        $(rendered).insertAfter(lastComment);
                    } else {
                        $(rendered).insertAfter("#comment-" + data.parent);
                    }
                }
                var notify = new PNotify({
                    title: 'New answer was added',
                    text: 'Jump to new answer',
                    type: 'info'
                });
                $('#comment-' + data.id).css('background', 'rgba(14, 216, 61, 0.31)').fadeIn(200);
                notify.get().css('cursor', 'pointer').click(function(e) {
                    $(document).scrollTop($("#comment-" + data.id).offset().top - 80);
                    $("#comment-" + data.id).hide();
                    $("#comment-" + data.id).fadeIn();
                    
                });
            });
        };

        forum.client.returnEditedComment = function(data) {
            if (data.topicId !== @Model.Id) {
                return;
            }
            var container = $('#comment-' + data.id + ' .body');
            container.html(data.body);
            var notify = new PNotify({
                title: 'Post was edited',
                text: 'Jump to modified answer',
            });
            $('#comment-' + data.id).css('background', 'rgba(216, 209, 14, 0.31)').fadeIn(200);
            notify.get().css('cursor', 'pointer').click(function(e) {
                $(document).scrollTop($("#comment-" + data.id).offset().top - 80);
                $("#comment-" + data.id).hide();
                $("#comment-" + data.id).fadeIn();
                
            });

        }
       
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#wmd-input').keyup(function () {
                forum.server.someoneIsTyping(@Model.Id);
            });
        });
    });
</script>