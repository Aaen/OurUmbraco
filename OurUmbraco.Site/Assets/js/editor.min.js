(function () {
    var converter = new Markdown.getSanitizingConverter();
    var editor = new Markdown.Editor(converter);
    var state = {};


    var thisEditor = $('#markdown-editor'),
       thisButtonRow = $('.wmd-button-row'),
       thisEditorInput = $('.wmd-input'),
       thisEditorPreview = $('.wmd-preview'),
       thisEditorDraft = $('.draft'),
       thisEditorSpacer = $('.markdown-spacer'),
       thisEditorMobilePreview = $('#mobile-preview');

    //image upload
    var $dialog = $('#insert-image-dialog');
    var $loader = $('.span', $dialog);
    var $url = $('input[type=text]', $dialog);
    var $file = $('input[type=file]', $dialog);
    var $cancel = $('input[type=button]', $dialog);

    editor.hooks.set('insertImageDialog', function (callback) {

        $dialog.show();

        var uploadStart = function () {
            $loader.show();
        };

        var uploadComplete = function (response) {
            $loader.hide();
            console.log(response.success)
            if (response.success) {
                callback(response.imagePath);
                $dialog.hide();
            } else {
                alert(response.message);
                $file.val('');
            }
        };

        $file.unbind('change').ajaxfileupload({
            action: $file.attr('data-action'),
            onStart: uploadStart,
            onComplete: uploadComplete
        });

        $cancel.click(function () {
            $dialog.hide();
            callback(null);
        });
        return true;
    });

   

    $(thisEditorInput).change(function () {
        thisEditorDraft.removeClass('show');
        if (typeof (Storage) !== 'undefined') {
            localStorage.setItem('ufdraft', $(this).val());
        }
    });



    editor.run();



    $('a.forum-reply').on('click', function (e) {
        e.preventDefault();
        state = $(this).data();
        initEditor($(this));

        showEditor();

        // draft
        if (typeof (Storage) !== 'undefined' && localStorage.getItem('ufdraft') != null) {
            thisEditorDraft.addClass('show');
        }
    });

    $('.markdown-close').on('click', function () {
        hideEditor();
        if ($.trim(thisEditorPreview.text()) != "") {
            thisEditorDraft.addClass('show');

            if (typeof (Storage) !== 'undefined') {
                localStorage.setItem('ufdraft', thisEditorInput.val());
            }

        }
    });

    $("#topic-submit").on("click", function (event) {
        event.preventDefault();
        $(this).attr("disabled", "disabled");
        $(this).attr('value', 'Posting');
        submit();
    });

    thisEditorInput.on('scroll', function () {
        var inputScroll = thisEditorInput.scrollTop(),
            scrolledPercentage = (inputScroll / 300) * 100,
            previewScrollHeight = document.getElementById('wmd-preview').scrollHeight,
            previewScroll = (previewScrollHeight / 100) * scrolledPercentage + 2;

        console.log(previewScroll);

        thisEditorPreview.scrollTop(previewScroll);
    });

    thisEditorDraft.on('click', function () {
        thisEditorDraft.removeClass('show');

        if (typeof (Storage) !== 'undefined' && localStorage.getItem('ufdraft') != null) {
            thisEditorInput.val(localStorage.getItem('ufdraft'));
            $(thisEditorInput).trigger('change');
        }
        showEditor();
    });


    function initEditor(ent) {

        var replyTo = "";
        if (ent.closest('.actions').length > 0) {
            replyTo = ent.closest('.actions').prevAll('.meta').find('a').text();
        } else
        {
            replyTo = $(".question:first .actions").prevAll('.meta').find('a').text()
        }
        
        $('.reply-name').html(replyTo);
    }

    function submit() {

       

        var type = "Post";
        if (state.id) {
            type = "Put";
        } else {
            state.id = "";
        }

        var url = "/umbraco/api/forum/" + state.controller + "/" + state.id;
        state.body = thisEditorInput.val();

        $.ajax({
            url: url,
            type: type,
            data: state
        }).done(function (data) {

            data.lower = function () {
                return function (text, render) {
                    return render(text).toLowerCase();
                }
            };

            if (typeof (Storage) !== 'undefined') {
                localStorage.removeItem('ufdraft')
            }

            if (type == "Post") {
                var template = $('#comment-template').html();
                var rendered = Mustache.render(template, data);
               
                if (data.parent == 0) {
                    $(".comments").append(rendered);

                    $("div.replybutton").insertAfter($("#comment-" + data.id));
                    
                }
                else
                {
                    $(rendered).insertAfter("#comment-"+data.parent);
                }

                $(document).scrollTop($("#comment-" + data.id).offset().top - 80);
                $("#comment-" + data.id).hide();
                $("#comment-" + data.id).fadeIn();
            }

            thisEditorInput.val("");
            thisEditorPreview.text("");
            hideEditor();
            $("#topic-submit").attr("value", "Post reply");
            $("#topic-submit").removeAttr("disabled");
        });
    }

    function showEditor() {
        thisEditor.addClass('write');
        thisEditorSpacer.addClass('write');
        setTimeout(function () {
            thisEditorInput.focus().delay(600);
        }, 1000);
    }
    function hideEditor()
    {
        thisEditor.removeClass('write');
        thisEditorSpacer.removeClass('write')
    }
    thisEditorMobilePreview.on('click', function () {
        thisEditor.toggleClass('mobile-preview');
        switch ($(this).attr('value')) {
            case 'Preview':
                $(this).attr('value', 'Editor');
                break;
            case 'Editor':
                $(this).attr('value', 'Preview');
                break;
        }
    });
})();