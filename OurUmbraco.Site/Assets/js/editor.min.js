(function () {
    var converter = new Markdown.getSanitizingConverter();
    var editor = new Markdown.Editor(converter);
    var state = {};

    editor.run();

    var thisEditor = $('#markdown-editor'),
        thisButtonRow = $('.wmd-button-row'),
        thisEditorInput = $('.wmd-input'),
        thisEditorPreview = $('.wmd-preview'),
        thisEditorDraft = $('.draft'),
        thisEditorSpacer = $('.markdown-spacer'),
        thisEditorMobilePreview = $('#mobile-preview');

    $('a.forum-reply').on('click', function (e) {
        e.preventDefault();
        state = $(this).data();
        initEditor($(this));

        // thisEditorDraft.removeClass('show');
        showEditor();
    });

    $('.markdown-close').on('click', function () {
        thisEditor.removeClass('write');
        thisEditorSpacer.removeClass('write');
        if ($.trim(thisEditorPreview.text()) != "") {
            thisEditorDraft.addClass('show');
        }
    });

    $("#topic-submit").on("click", function (event) {
        event.preventDefault();
        submit();
    });

    thisEditorInput.on('scroll', function () {
        var inputScroll = thisEditorInput.scrollTop(),
            scrolledPercentage = (inputScroll / 300) * 100,
            previewScrollHeight = document.getElementById('wmd-preview').scrollHeight,
            previewScroll = (previewScrollHeight / 100) * scrolledPercentage + 2;

            console.log(previewScroll);

            thisEditorPreview.scrollTop(previewScroll);
    });

    thisEditorDraft.on('click', function () {
        thisEditorDraft.removeClass('show');
        showEditor();
    });


    function initEditor(ent) {
        var replyTo = ent.closest('.actions').prevAll('.meta').find('a').text();
        $('.reply-name').html(replyTo);
    }

    function submit() {
        var type = "Post";
        if (state.id) {
            type = "Put";
        } else {
            state.id = "";
        }

        var url = "/umbraco/api/forum/" + state.controller + "/" + state.id;
        state.body = thisEditorInput.val();

        $.ajax({
            url: url,
            type: type,
            data: state
        }).done(function () {

            // Do something better then showing an alert...
            alert("DONE!");
        });
    }

    function showEditor() {
        thisEditor.addClass('write');
        thisEditorSpacer.addClass('write');
        setTimeout(function () {
            thisEditorInput.focus().delay(600);
        }, 1000);
    }

    thisEditorMobilePreview.on('click', function () {
        thisEditor.toggleClass('mobile-preview');
        switch ($(this).attr('value')) {
            case 'Preview':
                $(this).attr('value', 'Editor');
                break;
            case 'Editor':
                $(this).attr('value', 'Preview');
                break;
        }
    });
})();