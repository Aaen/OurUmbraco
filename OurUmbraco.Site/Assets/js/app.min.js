//underscore templating
_.templateSettings = {
  interpolate: /\{\{(.+?)\}\}/g
};


jQuery(document).ready(function (){

		// Quick menu
		var bodyVar = $('body'),
			searchAll = $('.search-all');

		$( ".user, .close" ).click(function(e) {
			e.stopPropagation();
			bodyVar.toggleClass( "quickmenu" );
		});

		$('.wrapper').on('click', function () {
	  		bodyVar.removeClass('quickmenu');
		});
	    

	    // Frontpage search
		$('.search-input').keyup(function(ev) {
			var term = $('.search-input').val();

			if(term.length === 0){
				$('.search-all').removeClass('open');
			}

			if(term.length > 3){
				var url = "/umbraco/api/Search/GetGlobalSearchResults";
				var template = _.template(
		            $( "script.search-item-template" ).html()
		        );

				//get search from server
				$.ajax({
				  dataType: "json",
				  url: url,
				  data: {term: term},
				  success: function(response){
				  	//toggle and empty box
				  	$('.search-all').addClass('open');
				  	$('.search-all ul').empty();

				  	//iterate
				  	_.each(response.items, function(item){

				  		//append as templated html
				  		var type = item.Fields.nodeTypeAlias;
				  		var icon = "icon-Chat";

				  		if(type === "documentation"){
				  			icon = "icon-Book-alt";
				  		}
				  		if(type === "project"){
				  			icon = "icon-Box";
				  		}

				  		var itemData = {icon: icon, name: item.Fields.nodeName, description: _.escape(item.Fields.body.substring(0, 100)), url: item.Fields.url};
						$('.search-all ul').append( 
							template( itemData )
						);
				  	});

				  	var linkhtml = '<li class="searc-view-all"><a href="/search?term=' + response.term + '">View All ' + response.total + ' results</a></li>';
				  	$('.search-all ul').append(linkhtml);

				  }
				});
			}
		});
		

		// Marked as solution
		// $('.solved').on('click', function (e) {
		// 	e.preventDefault();
		// 	$(this).parents('.comment').toggleClass('solution');
		// });


		// Mobile navigation
		$("#toggle").click(function(e) {
			e.preventDefault();
	        $(".cross").toggleClass("open");
	        $("nav").toggleClass("open");
		});

		jQuery('.nuget').click(function(){
			$(this).focus();
			$(this).select();
		});

		// temporary sidebar fuctionality
		$('.level-1 a').on('click', function (e) {
			e.preventDefault();
			var bla = $(this).parent();
			$('.sidebar-content nav li').removeClass('active');
			$(this).parent('li').toggleClass('active');
			$(this).parent().siblings('li').removeClass('open');	
			$(this).parent('li').toggleClass('open');
			console.log(bla);
		});


		// Click effect
		var ink, d, x, y;
		$(".button, .inked").click(function(e){

		    if($(this).find(".ink").length === 0){
		        $(this).prepend("<div class='ink'></div>");
		    }
		         
		    ink = $(this).find(".ink");
		    ink.removeClass("animate");
		     
		    if(!ink.height() && !ink.width()){
		        d = Math.max($(this).outerWidth(), $(this).outerHeight());
		        ink.css({height: d, width: d});
		    }
		     
		    x = e.pageX - $(this).offset().left - ink.width()/2;
		    y = e.pageY - $(this).offset().top - ink.height()/2;
		     
		    ink.css({top: y+'px', left: x+'px'}).addClass("animate");
		});

	    // Front page map
	    var map, map2;
	    var centerPos = new google.maps.LatLng(51.512161,-0.088721);

	    var style = 
	    	[	
				[ // mapStyle 0
					{
					    "featureType": "landscape",
					    "elementType": "labels",
					    "stylers": [
					        {
					            "visibility": "off"
					        }
						]
					},
					{
					    "featureType": "transit",
					    "elementType": "labels",
					    "stylers": [
					        {
					            "visibility": "off"
					        }
						]	
					},
					{
					    "featureType": "poi",
					    "elementType": "labels",
					    "stylers": [
					        {
					            "visibility": "off"
					        }
					    ]
					},
					{
					    "featureType": "water",
					    "elementType": "labels",
					    "stylers": [
					        {
					            "visibility": "off"
					        }
					    ]
					},
					{
					    "featureType": "road",
					    "elementType": "labels.icon",
					    "stylers": [
					        {
					            "visibility": "off"
					        }
					    ]
					},
					{
					    "stylers": [
					        {
					            "hue": "#00aaff"
					        },
					        {
					            "saturation": -100
					        },
					        {
					            "gamma": 2.15
					        },
					        {
					            "lightness": 12
					        }
					    ]
					},
					{
					    "featureType": "road",
					    "elementType": "labels.text.fill",
					    "stylers": [
					        {
					            "visibility": "on"
					        },
					        {
					            "lightness": 24
					        }
					    ]
					},
					{
					    "featureType": "road",
					    "elementType": "geometry",
					    "stylers": [
					        {
					            "lightness": 57
					        }
					    ]
					}
				],
				[ // mapStyle 1
				    {
				        "featureType": "water",
				        "elementType": "geometry",
				        "stylers": [
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 17
				            }
				        ]
				    },
				    {
				        "featureType": "landscape",
				        "elementType": "geometry",
				        "stylers": [
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 20
				            }
				        ]
				    },
				    {
				        "featureType": "road.highway",
				        "elementType": "geometry.fill",
				        "stylers": [
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 17
				            }
				        ]
				    },
				    {
				        "featureType": "road.highway",
				        "elementType": "geometry.stroke",
				        "stylers": [
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 29
				            },
				            {
				                "weight": 0.2
				            }
				        ]
				    },
				    {
				        "featureType": "road.arterial",
				        "elementType": "geometry",
				        "stylers": [
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 18
				            }
				        ]
				    },
				    {
				        "featureType": "road.local",
				        "elementType": "geometry",
				        "stylers": [
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 16
				            }
				        ]
				    },
				    {
				        "featureType": "poi",
				        "elementType": "geometry",
				        "stylers": [
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 21
				            }
				        ]
				    },
				    {
				        "elementType": "labels.text.stroke",
				        "stylers": [
				            {
				                "visibility": "on"
				            },
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 16
				            }
				        ]
				    },
				    {
				        "elementType": "labels.text.fill",
				        "stylers": [
				            {
				                "saturation": 36
				            },
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 30
				            }
				        ]
				    },
				    {
				        "elementType": "labels.icon",
				        "stylers": [
				            {
				                "visibility": "off"
				            }
				        ]
				    },
				    {
				        "featureType": "transit",
				        "elementType": "geometry",
				        "stylers": [
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 19
				            }
				        ]
				    },
				    {
				        "featureType": "administrative",
				        "elementType": "geometry.fill",
				        "stylers": [
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 20
				            }
				        ]
				    },
				    {
				        "featureType": "administrative",
				        "elementType": "geometry.stroke",
				        "stylers": [
				            {
				                "color": "#000000"
				            },
				            {
				                "lightness": 17
				            },
				            {
				                "weight": 1.2
				            }
				        ]
				    }
				]
			];

	    var mapStyle = $('#map').attr('data-mapStyle'),
	    	options = {
		        center: centerPos,
	            zoom: 11,
	            zoomControl: true,
	            zoomControlOptions: {
	                style: google.maps.ZoomControlStyle.SMALL,
	            },
	            disableDoubleClickZoom: true,
	            mapTypeControl: false,
	            scaleControl: false,
	            scrollwheel: false,
	            panControl: false,
	            streetViewControl: false,
	            draggable : true,
	            overviewMapControl: false,
	            overviewMapControlOptions: {
	                opened: false,
	            },
		        mapTypeId: google.maps.MapTypeId.ROADMAP
		    };

	    map = new google.maps.Map($('#map')[0], options);
		    map.setOptions({
		        styles: style[mapStyle]
	    });

		
	});

	var classOnScrollObject = function (selector, className, scrollDistance) {
			this.item 				= $(selector);
			this.itemClass 			= className;
			this.scrollDistance 	= scrollDistance;
			this.classApplied 		= false;
			this.scrollContainer 	= $(window);
			this.fromTop 			= this.scrollContainer.scrollTop();
		};

		classOnScrollObject.prototype.applyClass = function() {
			this.fromTop = this.scrollContainer.scrollTop();

			if (this.fromTop > this.scrollDistance && this.classApplied === false) {
				this.classApplied = true;
				this.item.addClass(this.itemClass);
			} else if (this.fromTop < this.scrollDistance && this.classApplied === true) {
				this.classApplied = false;
				this.item.removeClass(this.itemClass);
			}
		};

		function classOnScroll (selector, className, scrollDistance) {
			var newClassOnScroll = new classOnScrollObject(selector, className, scrollDistance);

			newClassOnScroll.applyClass();

			newClassOnScroll.scrollContainer.scroll(function () {
				newClassOnScroll.applyClass();
			});
		}