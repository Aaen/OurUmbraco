//underscore templating
 _.templateSettings = {
   interpolate: /\{\{(.+?)\}\}/g,
   evaluate : /\{\[([\s\S]+?)\]\}/g
 };


jQuery(document).ready(function (){

		// Quick menu
		var bodyVar = $('body'),
			searchAll = $('.search-all');

		$( ".user, .close" ).click(function(e) {
			e.stopPropagation();
			bodyVar.toggleClass( "quickmenu" );
		});

		$('.wrapper').on('click', function () {
	  		bodyVar.removeClass('quickmenu');
		});
	    

	    function redirectToSearch(ev){
	    	if(ev.keyCode === 13){
				ev.preventDefault();
				window.location = "/search?term="+this.value;
			}
	    }


		var projectSearch = _.debounce(function(ev) {
			var term = $('.project-search-input').val();
			var defaultListing = $('.projects-default-listing');
			var searchListing = $('.projects-search-listing');

			if(term.length === 0){
				defaultListing.show();
				searchListing.empty();
			}

			if(term.length > 3){
				var url = "/umbraco/api/OurSearch/GetProjectSearchResults";
				var template = _.template(
		            $( "script.search-item-project" ).html()
		        );

				//get search from server
				$.ajax({
				  dataType: "json",
				  url: url,
				  data: {term: term},
				  success: function(response){

				  	//toggle and empty box
				  	defaultListing.hide();
				  	searchListing.empty();

				  	if(response.items.length === 0){
				  		var linkhtml = '<p>No results found</p>';
				  		searchListing.append(linkhtml);
				  	}

				  	//iterate
				  	_.each(response.items, function(item){

				  		var image = (item.Fields.image && item.Fields.image.length > 0) ? item.Fields.image : "<i class='icon-Box'></i>";
				  		var itemData = {	
				  							nodeName: item.Fields.nodeName, 
				  							body: _.escape(item.Fields.body.substring(0, 150)), 
				  							url: item.Fields.url,
				  							karma: item.Fields.karma,
				  							downloads: item.Fields.downloads,
				  							versions: item.Fields.versions,
				  							image: image
				  						};
						

						searchListing.append( 
							template( itemData )
						);
				  	});

				  }
				});
			}
		}, 300);


		var docsSearch = _.debounce(function(ev) {

			var term = this.value;
			var defaultListing = $('.docs-default-listing');
			var searchListing = $('.docs-search-listing');
			
			if(term.length === 0){
				defaultListing.show();
				searchListing.empty();
			}
			
			if(term.length > 3){
				var url = "/umbraco/api/OurSearch/GetDocsSearchResults";
				var template = _.template(
		            $( "script.search-item-docs" ).html()
		        );

				//get search from server
				$.ajax({
				  dataType: "json",
				  url: url,
				  data: {term: term},
				  success: function(response){

				  	//toggle and empty box
				  	defaultListing.hide();
				  	searchListing.empty();

				  	if(response.items.length === 0){
				  		var linkhtml = '<li>No documentation found</li>';
				  		searchListing.append(linkhtml);
				  	}

				  	//iterate
				  	_.each(response.items, function(item){
							var itemData = {	
				  							name: item.Fields.nodeName, 
				  							body: _.escape(item.Fields.body.substring(0, 150)), 
				  							url: item.Fields.url
				  						};
						
						searchListing.append( 
							template( itemData )
						);
				  	});

				  }
				});
			}
		}, 300);


		var forumSearch = _.debounce( function(ev) {
			var term = this.value;
			var defaultListing = $('.forum-default-listing');
			var searchListing = $('.forum-search-listing');
			
			console.log(term);

			if(term.length === 0){
				defaultListing.show();
				searchListing.empty();
			}
			
			if(term.length > 3){
				var url = "/umbraco/api/OurSearch/GetForumSearchResults";
				var template = _.template(
		            $( "script.search-item-forum" ).html()
		        );

				//get search from server
				$.ajax({
				  dataType: "json",
				  url: url,
				  data: {term: term},
				  success: function(response){

				  	//toggle and empty box
				  	defaultListing.hide();
				  	searchListing.empty();

				  	if(response.items.length === 0){
				  		var linkhtml = '<tr><td>No threads found</td></tr>';
				  		searchListing.append(linkhtml);
				  	}

				  	//iterate
				  	_.each(response.items, function(item){
						var itemData = {	
			  							name: item.Fields.nodeName, 
			  							url: item.Fields.url,
			  							
			  							hasAnswer: item.Fields.solved == 1,
			  							replies: item.Fields.replies,
			  							
			  							body: item.Fields.body.substring(0, 150),
			  							
			  							forumUrl: item.Fields.parentId,
			  							forumName: "Category",

			  							updateDate: item.Fields.updateDate
			  						};
						
						searchListing.append( 
							template( itemData )
						);
				  	});

				  }
				});
			}
		}, 300);


		var globalSearch = _.debounce(function(ev) {
			var term = this.value;

			if(term.length === 0){
				$('.search-all').removeClass('open');
			}

			if(ev.keyCode === 13){
				ev.preventDefault();
				window.location = "/search?term="+term;
			}

			if(term.length > 3){
				var url = "/umbraco/api/OurSearch/GetGlobalSearchResults";
				var template = _.template(
		            $( "script.search-item-template" ).html()
		        );

				//get search from server
				$.ajax({
				  dataType: "json",
				  url: url,
				  data: {term: term},
				  success: function(response){
				  	//toggle and empty box
				  	$('.search-all').addClass('open');
				  	$('.search-all ul').empty();

				  	//iterate
				  	_.each(response.items, function(item){

				  		//append as templated html
				  		var type = item.Fields.nodeTypeAlias;
				  		var icon = "icon-Chat";

				  		if(type === "documentation"){
				  			icon = "icon-Book-alt";
				  		}
				  		if(type === "project"){
				  			icon = "icon-Box";
				  		}

				  		var itemData = {icon: icon, name: item.Fields.nodeName, description: _.escape(item.Fields.body.substring(0, 100)), url: item.Fields.url};
						$('.search-all ul').append( 
							template( itemData )
						);
				  	});

				  	if(response.items.length > 0){
				  		var linkhtml = '<li class="search-view-all"><a href="/search?q=' + response.term + '">View All results</a></li>';
				  		$('.search-all ul').append(linkhtml);
				  	}else{
				  		$('.search-all ul').append("<li>No results</li>");
				  	}
				  	
				  }
				});
			}
		}, 300);

		
		//docs search form
		$('.docs-search-input')
			.keydown(redirectToSearch)
			.keyup(docsSearch);

		//forum search form
		$('.forum-search-input')
			.keydown(redirectToSearch)
			.keyup( forumSearch );
		
	    // Frontpage search form
		$('.search-input')
			.keydown(redirectToSearch)
			.keyup(globalSearch);
		
		//project search form
		$('.project-search-input')
			.keydown(redirectToSearch)
			.keyup(projectSearch);
		

		
		// Mobile navigation
		$("#toggle").click(function(e) {
			e.preventDefault();
	        $(".cross").toggleClass("open");
	        $("nav").toggleClass("open");
		});

		jQuery('.nuget').click(function(){
			$(this).focus();
			$(this).select();
		});

		// Tab
		$('.tabs li').click(function(){
			var tab_id = $(this).attr('data-tab');

			$('.tabs li').removeClass('current');
			$('.tab-content').removeClass('current');

			$(this).addClass('current');
			$("#"+tab_id).addClass('current');
		});

		// temporary sidebar fuctionality
		$('.level-1 li').on('click', function (e) {
			e.preventDefault();
			var bla = $(this).parent();
			$('.sidebar-content nav li').removeClass('active');
			$(this).parent('li').toggleClass('active');
			$(this).parent().siblings('li').removeClass('open');	
			$(this).parent('li').toggleClass('open');
			console.log(bla);
		});


		// Click effect
		var ink, d, x, y;
		$(".button, .inked").click(function(e){

		    if($(this).find(".ink").length === 0){
		        $(this).prepend("<div class='ink'></div>");
		    }
		         
		    ink = $(this).find(".ink");
		    ink.removeClass("animate");
		     
		    if(!ink.height() && !ink.width()){
		        d = Math.max($(this).outerWidth(), $(this).outerHeight());
		        ink.css({height: d, width: d});
		    }
		     
		    x = e.pageX - $(this).offset().left - ink.width()/2;
		    y = e.pageY - $(this).offset().top - ink.height()/2;
		     
		    ink.css({top: y+'px', left: x+'px'}).addClass("animate");
		});		
	});

	var classOnScrollObject = function (selector, className, scrollDistance) {
			this.item 				= $(selector);
			this.itemClass 			= className;
			this.scrollDistance 	= scrollDistance;
			this.classApplied 		= false;
			this.scrollContainer 	= $(window);
			this.fromTop 			= this.scrollContainer.scrollTop();
		};

		classOnScrollObject.prototype.applyClass = function() {
			this.fromTop = this.scrollContainer.scrollTop();

			if (this.fromTop > this.scrollDistance && this.classApplied === false) {
				this.classApplied = true;
				this.item.addClass(this.itemClass);
			} else if (this.fromTop < this.scrollDistance && this.classApplied === true) {
				this.classApplied = false;
				this.item.removeClass(this.itemClass);
			}
		};

		function classOnScroll (selector, className, scrollDistance) {
			var newClassOnScroll = new classOnScrollObject(selector, className, scrollDistance);

			newClassOnScroll.applyClass();

			newClassOnScroll.scrollContainer.scroll(function () {
				newClassOnScroll.applyClass();
			});
		}